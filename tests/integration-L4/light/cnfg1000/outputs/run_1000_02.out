Mon Nov 13 10:59:04 CET 2017
omp_num_threads = 1 
L =4
T =4
Enable IO checks (and readback in case of Lemon IO)
Debug level = 2
Initial store counter set to 1000
Nmeas= 1 
2 kappa mu=0.177 
kappa=0.177 
X0 for boundary cond. in t-direction set to 1.000000e+00 times pi
Gauge Configuration input filename set to /hiskp2/gauges/test4x4x4x4/conf
Use even/odd preconditioning
Using relative precision
Not running in 'subprocess' mode
Not running in 'lowmem' mode
Using Volume Sources
Don't read inversion source from file
Inverting for 1 samples
RanluxdLevel set to 2 
Use a different seed for each process in ranlxd!
initialising operator with type CLOVER (4) line 37
operator has id 0
  2KappaMu set to 0.000000 line 38 operator 0
  Set c_sw set to 1.000000 in line 39 for operator 0
  kappa set to 0.177000 line 40 operator 0
  Solver set to BiCGstab line 41 operator 0
  SolverPrecision set to 0.000000 line 43 operator 0
  EigCGtolsq set to 0.000000 line 43 operator 0
  MaxSolverIterations set to 25000 line 44 operator 0
  Use use sloppy precision (half) in the inverter (if supported by the inverter) line 45 operator 0
  Not using compression in the inverter line 46 operator 0
operator 0 parsed line 47

# Process 1 of 4 on qbig: cart_id 1, coordinates (1 0 0 0)
# Process 2 of 4 on qbig: cart_id 2, coordinates (2 0 0 0)
# Process 3 of 4 on qbig: cart_id 3, coordinates (3 0 0 0)
# Instructing OpenMP to use 1 threads.
# Creating the following cartesian grid for a 1 dimensional parallelisation:
# 4 x 1 x 1 x 1
# Process 0 of 4 on qbig: cart_id 0, coordinates (0 0 0 0)
This is the tmLQCD lib-wrapper code for twisted mass Wilson QCD

Version 5.2.0, commit 7c4c8ae88db23ab56fadfa875d560297d22f9f45
# the code is compiled for non-blocking MPI calls (spinor and gauge)
# the code is compiled with openMP support
# Non-Schroedinger (anti-periodic, periodic or twisted) boundary conditions are used
# The lattice size is 4 x 4 x 4 x 4
# The local lattice size is 1 x 4 x 4 x 4
# Even/odd preconditioning is used
# beta = 6.000000000000 , kappa= 0.177000000000
# boundary conditions for fermion fields (t,x,y,z) * pi: 1.000000 0.000000 0.000000 0.000000 
Trying input file LapH_1000_02.in
omp_num_threads = 1
quda_direct = 0
config = 1000
total number of configs = 1
distance betweeen configs = 8
Ls = 4
Lt = 4
nb_ev = 16
nb_rnd = 1
seed for rnd_vec 0 = 34567
verbose = 0
endianness = little
use_zgemm = 0
quarktype = u
inversion_source_type_t = B
inversion_source_number_t = 2
inversion_source_type_v = I
inversion_source_number_v = 2
inversion_source_type_d = F
inversion_source_number_d = 4
nb_of_sinks = 1
nb_of_sink_rnd_vec = 1
seed = 0
inversion_sink_type_t = F
inversion_sink_number_t = 4
inversion_sink_type_s = F
inversion_sink_number_s = 4
inversion_sink_type_d = F
inversion_sink_number_d = 4
inversion_sink_type_c = F
inversion_sink_number_c = 3
outpath = .
inpath_ev = /hiskp2/eigensystems/test4x4x4x4/nev_16
processing config: 1000

#
# Trying to read gauge field from file /hiskp2/gauges/test4x4x4x4/conf.1000.
# Constructing LIME reader for file /hiskp2/gauges/test4x4x4x4/conf.1000 ...
found header xlf-info, will now read the message
found header ildg-format, will now read the message
found header ildg-binary-data, will now read the message
# Time spent reading 147 kb was 210 us.
# Reading speed: 702 Mb/s (176 Mb/s per MPI process).
found header scidac-checksum, will now read the message
# Scidac checksums for gaugefield /hiskp2/gauges/test4x4x4x4/conf.1000:
#   Calculated            : A = 0xef78dfb3 B = 0xba50a396.
#   Read from LIME headers: A = 0xef78dfb3 B = 0xba50a396.
# Reading ildg-format record:
#   Precision = 64 bits (double).
#   Lattice size: LX = 4, LY = 4, LZ = 4, LT = 4.
# Input parameters:
#   Precision = 64 bits (double).
#   Lattice size: LX = 4, LY = 4, LZ = 4, LT = 4.
# Finished reading gauge field.
# The computed plaquette value is 6.0437910940803119e-01.
	reading eigenvectors
Using ranluxd at level 2
Using ranluxd at level 2
Using ranluxd at level 2
	Time for eigenvector reading: 0.00135899
Using ranluxd at level 2
	writing random vector
	
Doing inversions at: t = 0	 e = 0	 d = 0

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.409693e+01!
# Inversion done in 3.45e-03 sec. 
	
Doing inversions at: t = 0	 e = 0	 d = 1

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.460131e+01!
# Inversion done in 3.50e-03 sec. 
	
Doing inversions at: t = 0	 e = 0	 d = 2

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.464884e+01!
# Inversion done in 3.36e-03 sec. 
	
Doing inversions at: t = 0	 e = 0	 d = 3

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.409681e+01!
# Inversion done in 3.51e-03 sec. 
	
Doing inversions at: t = 0	 e = 1	 d = 0

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.108123e+01!
# Inversion done in 3.50e-03 sec. 
	
Doing inversions at: t = 0	 e = 1	 d = 1

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.065833e+01!
# Inversion done in 3.35e-03 sec. 
	
Doing inversions at: t = 0	 e = 1	 d = 2

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.030694e+01!
# Inversion done in 3.37e-03 sec. 
	
Doing inversions at: t = 0	 e = 1	 d = 3

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.107865e+01!
# Inversion done in 3.48e-03 sec. 
	
Doing inversions at: t = 1	 e = 0	 d = 0

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.210241e+01!
# Inversion done in 3.50e-03 sec. 
	
Doing inversions at: t = 1	 e = 0	 d = 1

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.234501e+01!
# Inversion done in 3.35e-03 sec. 
	
Doing inversions at: t = 1	 e = 0	 d = 2

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.245406e+01!
# Inversion done in 3.39e-03 sec. 
	
Doing inversions at: t = 1	 e = 0	 d = 3

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.247436e+01!
# Inversion done in 3.48e-03 sec. 
	
Doing inversions at: t = 1	 e = 1	 d = 0

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.197743e+01!
# Inversion done in 3.37e-03 sec. 
	
Doing inversions at: t = 1	 e = 1	 d = 1

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.229550e+01!
# Inversion done in 3.46e-03 sec. 
	
Doing inversions at: t = 1	 e = 1	 d = 2

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.200857e+01!
# Inversion done in 3.36e-03 sec. 
	
Doing inversions at: t = 1	 e = 1	 d = 3

#
# csw = 1.000000000000, computing clover leafs
#
# 2 kappa mu = 0.000000000000, kappa = 0.177000000000, c_sw = 1.000000000000
# Using even/odd preconditioning!
# mu = 0.000000000000, kappa = 0.177000000000, csw = 1.000000000000
# This solver is not available for this operator. Exisiting!
# Inversion done in 0 iterations, squared residue = 1.138519e+01!
# Inversion done in 3.48e-03 sec. 
	writing perambulator
	Time for perambulator writing: 0.00169992
Mon Nov 13 10:59:05 CET 2017
